name: CI Build
description: Builds, tests and analyses the code

inputs:
  githubToken:
    description: Github token
    required: true
  sonarToken:
    description: Sonar token
    required: true
  sonarProjectKey:
    description: Project Key in sonar
    required: true

runs:
  using: composite
  steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.0.x
          8.0.x
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'zulu'
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v4
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        New-Item -Path ./.sonar/scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
        dotnet tool install JetBrains.dotCover.GlobalTool
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ inputs.githubToken }}
        SONAR_TOKEN: ${{ inputs.sonarToken }}
      shell: pwsh
      run: |
        ./.sonar/scanner/dotnet-sonarscanner begin `
          /k:"${{ inputs.sonarProjectKey }}" `
          /o:"bmazzarol" `
          /d:sonar.token="${{ inputs.sonarToken }}" `
          /d:sonar.host.url="https://sonarcloud.io" `
          /d:sonar.cs.dotcover.reportsPaths=dotCover.Output.html `
          /d:sonar.cs.vstest.reportsPaths=**/test-results.trx `
          /d:sonar.scanner.scanAll=false
        
        dotnet dotcover test `
          --dcReportType=HTML `
          --dcAttributeFilters=System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute `
          --verbosity normal `
          --logger "trx;LogFileName=test-results.trx"
        
        ./.sonar/scanner/dotnet-sonarscanner end `
          /d:sonar.token="${{ inputs.sonarToken }}"
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: ${{ always() && github.event_name == 'pull_request' }}
      with:
        name: test-results
        path: |
          **/test-results.trx
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: ${{ always() && github.event_name == 'pull_request' }}
      with:
        files: |
          **/test-results.trx